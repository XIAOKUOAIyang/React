{"version":3,"sources":["components/List.js","components/Buttons.js","pages/Home.js","pages/context.js","components/Control.js","pages/Demo02.js","pages/Demo01.js","pages/App.js","pages/Hoc.js","zuoye/Input.js","zuoye/List.js","zuoye/TodoList.js","index.js"],"names":["List","props","data","map","item","key","id","title","Buttons","onClick","getData","React","Component","Context","createContext","Demo02","Consumer","changeData","Demo01","style","width","height","background","name","defaultProps","console","log","withFetch","Com","url","Topic","state","fetch","then","res","json","setState","this","displayName","Input","dangerouslySetInnerHTML","__html","content","htmlFor","type","value","onChange","e","handleChange","addTodo","todos","todo","idx","done","toggle","checked","deleteTodo","TodoList","inpValue","target","alert","filter","index","newTodos","JSON","parse","stringify","localStorage","getItem","setItem","arr1","arr2","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a7fe027.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst List = (props)=>{\r\n    // 函数组件\r\n    return <ul>\r\n      {\r\n        props.data.map(\r\n          (item)=><li key={item.id}>{item.title}</li>\r\n          )\r\n      }\r\n    </ul>\r\n  }\r\n  \r\n  export default List;","import React from 'react';\r\nconst Buttons = (props)=>{\r\n    const btns=[1,2,3,4,5];\r\n\r\n    return <div>\r\n        {\r\n        btns.map((item)=>\r\n        // <button key={item} onClick={()=>this.getData(item)}>{item}</button>\r\n        <button key={item} onClick={()=>props.getData(item)}>{item}</button>\r\n        )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Buttons;","import React,{Component} from 'react';\r\nimport List from '../components/List';\r\nimport Buttons from '../components/Buttons';\r\n\r\n\r\n// const Buttons = ()=>{\r\n//     const btns=[1,2,3,4,5];\r\n//     const handleClick=(num)=>{\r\n//       //事件对象\r\n//       console.log(num);\r\n//     }\r\n//     return <div>\r\n//       {\r\n//         btns.map((item)=>\r\n//           <button key={item} onClick={()=>handleClick(item)}>{item}</button>\r\n//         )\r\n//       }\r\n//     </div>\r\n//   }\r\n\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        data:[]\r\n      }\r\n      this.handleClick=this.handleClick.bind(this)\r\n  \r\n      // setTimeout(()=>{\r\n      //   this.setState({data:[5,6,7,8,9]})\r\n      // },500)\r\n      console.log(this.props)\r\n      \r\n      fetch('https://cnodejs.org/api/v1/topics')\r\n      .then(res=>res.json())\r\n      .then(data=>{\r\n        this.setState({data:data.data})\r\n      })\r\n    }\r\n  \r\n    handleClick(){\r\n      console.log(\"hello\")\r\n    }\r\n    getData = (page)=>{\r\n      fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n      .then(res=>res.json())\r\n      .then(data=>{\r\n        this.setState({data:data.data})\r\n      })\r\n    }\r\n    //类组件\r\n    render(){\r\n      const {data}=this.state;\r\n    //   const btns=[1,2,3,4,5];\r\n      // return <ul>\r\n      //   {\r\n      //     data.map(\r\n      //       (item)=><li>{item.title}</li>\r\n      //     )\r\n      //   }\r\n      // </ul>\r\n      return <div>\r\n        {/* {\r\n           btns.map((item)=>\r\n           <button key={item} onClick={()=>this.getData(item)}>{item}</button>\r\n         )\r\n       } */}\r\n        <Buttons getData={this.getData}/>\r\n        {/* <button onClick={this.handleClick}>click</button> */}\r\n        {/* <Buttons/> */}\r\n        <List data={data}/>\r\n      </div>\r\n    }\r\n  }\r\n\r\n//默认导出(只能导出一个)\r\nexport default Home;\r\n//命名导出\r\n//let a = 100;\r\n//export {Home}\r\n//export {a}\r\n","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n\r\n","import React, { Component } from 'react'\r\nimport './control.css'\r\n\r\n\r\n//组件命名首字母一定要大写\r\nexport default class Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[\r\n                {title:\"1\",done:false},\r\n                {title:\"3\",done:true},\r\n                {title:\"12\",done:true},\r\n                {title:\"11\",done:false}\r\n            ]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n        // console.log(e.target.value);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n\r\n    }\r\n\r\n    // addTodo=()=>{\r\n    //     this.state.todos.push({title:this.state.inpValue});\r\n    //     this.setState({\r\n    //         todos:this.state.todos\r\n    //     })\r\n    // }\r\n    \r\n\r\n    //将新任务添加到序列里\r\n    addTodo=()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n\r\n        this.setState({inpValue:''});\r\n    }\r\n\r\n    //进行删除的方法\r\n    deleteTodo=(idx)=>{\r\n        // let newTodos=JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({\r\n        //     todos:newTodos\r\n        // })\r\n\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!==idx)\r\n        });\r\n\r\n        //setState是异步执行的，注意callback的用法   \r\n        // this.setState({\r\n        //     todos:this.state.todos.filter((item,index)=>index!==idx)\r\n        // },()=>{\r\n        //     localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        // });\r\n\r\n\r\n        // localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    }\r\n\r\n    //修改当前的属性的方法\r\n    toggle=(index)=>{\r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done=!newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos =(done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li key={idx}>\r\n                    <input onClick={()=>this.toggle(idx)} checked={done} type=\"checkbox\" />\r\n                    {/* <span>{todo.title}</span> */}\r\n\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button onClick={()=>this.deleteTodo(idx)}>删除</button>\r\n                </li>\r\n            }\r\n        })\r\n            \r\n    }\r\n    render() {\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        const{todos,inpValue}=this.state;\r\n        let arr1 = todos.filter(item=>!item.done);\r\n        // let arr1=todos.filter((item,index)=>{\r\n        //     return item.done;\r\n        // })\r\n\r\n        // let arr1=todos.filter(item=>item.done)\r\n        // console.log(arr1);\r\n\r\n        return (\r\n            <div className=\"box\">\r\n                <label htmlFor=\"inp\">todoList</label>\r\n                {/* <input ref={inp=>this.input = inp} value={this.state.inpValue} type=\"text\" onChange={this.handleChange}/> */}\r\n                <input ref={inp=>this.input = inp} value={inpValue} type=\"text\" onChange={this.handleChange}/>\r\n                \r\n                <button onClick={this.addTodo}>添加</button>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                    <ul>\r\n                        {/* {\r\n                            todos.map((todo,idx)=>{\r\n                                if(!todo.done){\r\n                                    return <li key={idx}>\r\n                                        <input type=\"checkbox\" />\r\n                                        <span>{todo.title}</span>\r\n                                        <button onClick={()=>this.deleteTodo(idx)}>删除</button>\r\n                                    </li>\r\n                                }\r\n                            })\r\n                        } */}\r\n                        {this.renderTodos(false)}\r\n                    </ul>\r\n            \r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {/* 条件渲染 */}\r\n                {\r\n                    3>21?<button>登录</button>:<span>hello</span>\r\n\r\n                }\r\n                <button>{2>3?'登录':'注册'}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//组件名首字母一定要大写\r\n\r\n","import React from 'react'\r\nimport Context from './context';\r\n\r\nexport const Demo02 = () => {\r\n    return (\r\n        <div>\r\n        <h2>Demo02</h2>\r\n        <Context.Consumer>\r\n            {\r\n                ({data})=>data.map(item=><li key={item}>{item}</li>)                    \r\n            }\r\n        </Context.Consumer>\r\n\r\n        <Context.Consumer>\r\n            {\r\n                ({changeData})=><button onClick={()=>changeData(123)}>点击</button>\r\n            }\r\n        </Context.Consumer>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Demo02","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from './context';\r\nimport Demo02 from './Demo02';\r\n\r\n//rcc\r\n//rafc\r\n//rafce\r\n\r\nconst Demo01 = (props)=>{\r\n    return(\r\n    <div style={{width:200,height:200,background:'red'}}>\r\n        {props.name}\r\n        <h2>Demo01</h2>\r\n        <ul>\r\n            <Context.Consumer>\r\n                {\r\n                    // (data)=>{\r\n                    //     return <div>\r\n                    //         {data.data}\r\n                    //     </div>\r\n                    // }\r\n\r\n                    // (data)=><li>\r\n                    //     {data.data}\r\n                    // </li>\r\n\r\n                    (data)=>data.data.map(item=><li key={item}>{item}</li>)\r\n                    \r\n                }\r\n            </Context.Consumer>\r\n        </ul>\r\n        <Demo02/>\r\n    </div>\r\n    )\r\n}\r\n\r\nDemo01.propTypes={\r\n    name:PropTypes.string.isRequired\r\n}\r\nDemo01.defaultProps={\r\n    name:'tom'\r\n}\r\n\r\nexport default Demo01;","import React from 'react'\r\nimport Context from './context'\r\nimport Demo01 from './Demo01';\r\n\r\nimport { render } from 'react-dom';\r\n\r\nconsole.log(Context);\r\n// const App = () => {\r\n//     let data={data:[\"hello\",\"context\"]}    \r\n//     return (\r\n//         // <Context.Provider value={{data:[\"hello\",\"context\"]}}>\r\n//         <Context.Provider value={data}>\r\n//             <Demo01/>\r\n//         </Context.Provider>\r\n//     )\r\n// }\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data:['hello','context'],\r\n        }\r\n    }\r\n    changeData = (newData)=>{\r\n        this.setState({data:[...this.state.data,newData]})\r\n    }\r\n    render(){\r\n        return (\r\n            <Context.Provider value={{\r\n                data:this.state.data,\r\n                changeData:this.changeData\r\n            }}>\r\n                <Demo01 />\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React, { Component } from 'react';\r\n\r\n// export class Detail extends Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.state = {\r\n//             data:''\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data.content}))\r\n//     }\r\n//     render(){\r\n//         return <div>\r\n//             <h1>标题</h1>\r\n//             <div>{this.state.data}</div>\r\n//         </div>\r\n//     }\r\n// }\r\n\r\n\r\n// class Hoc extends Component {\r\n//     constructor(){\r\n//         super();\r\n//         this.state = {\r\n//             data:[]\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/api/v1/topics')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data}))\r\n//     }\r\n//     render() {\r\n//         console.log(this.state.data);\r\n//         return (\r\n//             <div>\r\n//                 Hoc\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Hoc;\r\n\r\n\r\n// const withFetch = (Com,url)=>{\r\n//     return class Topic extends Component{\r\n//         constructor(){\r\n//             super();\r\n//             this.state = {\r\n//                 data:[]\r\n//             }\r\n//         }\r\n//         componentDidMount(){\r\n//             fetch(url)\r\n//             .then(res=>res.json())\r\n//             .then(res=>this.setState({data:res.data}))\r\n//         }\r\n//         render(){\r\n//             return <Com data={this.state.data}/>\r\n//         }\r\n//     }\r\n// }\r\n\r\n// const De =(props)=>{\r\n//     return <div>\r\n//         <h1>标题</h1>\r\n//         {/* <div>{props.data.content}</div> */}\r\n//         <div dangerouslySetInnerHTML={{__html:props.data.content}}>\r\n\r\n//         </div>\r\n//     </div>\r\n// }\r\n\r\n// export const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\n\r\n// const Ho = (props)=>{\r\n//     console.log(props.data);\r\n//     return <ul>\r\n//         {\r\n//             props.data.map((item)=><li>{item.title}</li>)\r\n//         }\r\n//     </ul>\r\n// }\r\n// const Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\n// export default Hoc;\r\n\r\n\r\n\r\nconst withFetch = (Com,url)=>{\r\n    class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com {...this.props} data={this.state.data}/>\r\n        }\r\n    }\r\n    Topic.displayName= `withFetch(${Com.name})`\r\n    return Topic;\r\n}\r\n\r\nconst De = (props)=>{\r\n    return <div>\r\n        <h1>标题{props.name}</h1>\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}}\r\n        >\r\n        </div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\nconst Ho = (props)=>{\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;\r\n\r\n\r\n\r\n\r\n\r\n","// import React from 'react';\r\n\r\n// const Input = (props) => {\r\n\r\n//   return <div>\r\n//             <label htmlFor='inp'>todoList</label>\r\n            \r\n//             <input type='text' id='inp' value={props.value} onChange={(e)=>props.handleChange(e)} />\r\n//             <button onClick={()=>props.addTodo()}>添加</button>\r\n//          </div>\r\n// }\r\n\r\n\r\nimport React, { Component } from 'react'\r\n\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor='inp'>todoList</label>\r\n                <input type='text' id='inp' value={this.props.value} onChange={(e)=>this.props.handleChange(e)} />\r\n                <button onClick={()=>this.props.addTodo()}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    // this.props.todos.map((todo, idx)=>\r\n                    //     <li key={idx}><input type=\"checkbox\" onClick={()=>{this.props.toggle(idx)}} checked={this.props.done}/>\r\n                    //     <span dangerouslySetInnerHTML={{ __html: todo.title }}></span>\r\n                    //     <button onClick={() => this.props.deleteTodo(idx)}>删除</button>\r\n                    //     </li>)\r\n                    this.props.todos.map((todo, idx) => {\r\n                        if (this.props.done == todo.done) {\r\n                          return <li key={idx}>\r\n                            <input onClick={() => this.props.toggle(idx)} checked={this.props.done} type='checkbox' />\r\n                            {/* <span>{todo.title}</span> */}\r\n                            <span dangerouslySetInnerHTML={{ __html: todo.title }}></span>\r\n                            <button onClick={() => this.props.deleteTodo(idx)}>删除</button>\r\n                          </li>\r\n                        }\r\n                      })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default List;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Input from './Input'\r\nimport List from './List'\r\n\r\n\r\n//组件名首字母一定要大写\r\nclass TodoList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n        // console.log(e.target.value);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n\r\n    }\r\n\r\n \r\n     //将新任务添加到序列里\r\n     addTodo=()=>{\r\n        if(this.state.inpValue==''){\r\n            alert('输入为空');\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n\r\n        this.setState({inpValue:''});\r\n    }\r\n   \r\n     //进行删除的方法\r\n     deleteTodo=(idx)=>{\r\n       \r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!==idx)\r\n        });\r\n   \r\n    }\r\n    //修改当前的属性的方法\r\n    toggle=(index)=>{\r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done=!newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    \r\n    \r\n    render() {\r\n        // localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        const{todos,inpValue}=this.state;\r\n        let arr1 = todos.filter(item=>!item.done);\r\n        let arr2 = todos.filter(item=>item.done);\r\n        return (\r\n            \r\n            <div>\r\n                <Input value={inpValue} handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n                \r\n                <h2>正在进行{arr1.length}</h2>\r\n                <List todos={todos} done={false} toggle={this.toggle} deleteTodo={this.deleteTodo}/>\r\n\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <List todos={todos} done={true} toggle={this.toggle} deleteTodo={this.deleteTodo}/>\r\n            </div>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\nexport default TodoList;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport Home from './pages/Home';\n\nimport Control from './components/Control';\n\nimport Demo01 from './pages/Demo01';\nimport App from './pages/App';\n\n// import Hoc from './pages/Hoc';\nimport Hoc,{Detail} from './pages/Hoc';\n\nimport Hook from './pages/Hook';\nimport context from './pages/context'\nimport Context from './pages/context';\nimport TodoList from './zuoye/TodoList'\n// import $ from 'jquery';\n// console.log($);\n\n\n//alt shift + 上下键  复制一行\n//alt + 上下键  移动一行\n//按住alt ，鼠标点击\n//CTRL + shift  左右键，选中整个单词\n//ctrl +shift +L\n// const List = (props)=>{\n//   // 函数组件\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//         )\n//     }\n//   </ul>\n// }\n\n// const Buttons = ()=>{\n//   const btns=[1,2,3,4,5];\n//   const handleClick=(num)=>{\n//     //事件对象\n//     console.log(num);\n//   }\n//   return <div>\n//     {\n//       btns.map((item)=>\n//         <button key={item} onClick={()=>handleClick(item)}>{item}</button>\n//       )\n//     }\n//   </div>\n// }\n\n\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//     this.handleClick=this.handleClick.bind(this)\n\n//     // setTimeout(()=>{\n//     //   this.setState({data:[5,6,7,8,9]})\n//     // },500)\n//     console.log(this.props)\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(data=>{\n//       this.setState({data:data.data})\n//     })\n//   }\n\n//   handleClick(){\n//     console.log(\"hello\")\n//   }\n//   getData = (page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page)\n//     .then(res=>res.json())\n//     .then(data=>{\n//       this.setState({data:data.data})\n//     })\n//   }\n//   //类组件\n//   render(){\n//     const {data}=this.state;\n//     const btns=[1,2,3,4,5];\n//     // return <ul>\n//     //   {\n//     //     data.map(\n//     //       (item)=><li>{item.title}</li>\n//     //     )\n//     //   }\n//     // </ul>\n//     return <div>\n//       {\n//          btns.map((item)=>\n//          <button key={item} onClick={()=>this.getData(item)}>{item}</button>\n//        )\n//      }\n//       <button onClick={this.handleClick}>click</button>\n//       <Buttons/>\n//       <List data={data}/>\n//     </div>\n//   }\n// }\nReactDOM.render(\n  <TodoList/>,\n\n\n  // <Context.Provider value='123'>\n  //   <Hook/>\n  // </Context.Provider>,\n\n  // <Hook/>,\n  // <div><Hoc/><Detail name=\"tom\"/></div>,\n  // <Hoc/>,\n  //<App/>,\n  // <Control/>,\n  // <Demo01 name={'123'}/>,\n  // <Home data=\"abc\"/>,\n  document.getElementById('root')\n);\n\n//组件声明\n//函数组件\n//UI（展示）组件。木偶组件（将来传什么就展示什么）\n// function App(props){\n//   console.log(props);\n//   const{title,id}=props;\n//   return <div>\n//     <div>{props.title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// ReactDOM.render(\n//   <App title='任意值' id='app'/>,\n//   document.getElementById('root')\n// );\n\n\n//智能组件\n// class Demo extends React.Component{\n//   render(){\n//   return<div>\n//     <App title=\"任意值\" id=\"app\"/>\n//     <App title=\"任意值\" id=\"app\"/>\n//     <App title=\"任意值\" id=\"app\"/>\n//     <App title=\"任意值\" id=\"app\"/>\n//   </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo title='任意值' id='app'/>,\n//   document.getElementById('root')\n// );\n\n\n\n\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       name:new Date().toLocaleString()\n//     }\n//     setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//     },1000)\n//   }\n//   render(){\n//   return<div>\n//     <div>name:{this.state.name}</div>\n//     <App title=\"任意值\" id=\"app\"/>\n//   </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo title='任意值' id='app'/>,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n\n\n\n\n// setInterval(()=>{\n//   let ele=<h1 id=\"title\" className=\"tit\">\n//     <div>当前时间</div>\n//     {new Date().toLocaleString()}\n//   </h1>;\n\n//   ReactDOM.render(\n//     ele,\n//     document.getElementById('root')\n//   );\n  \n// },1000);\n\n\n\n\n\n\n// let ele=<h1 id=\"title\" className=\"tit\">\n//   <div>hello world</div>\n//   react\n// </h1>;\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:\"title\"},\n//   // 'hello world'\n//   React.createElement('div',{},'hello world'),\n//   'react'\n//   );\n\n// console.log(ele);\n\n// //将jsx对象渲染到DOM中\n// let ReactDOM={\n//   render(eleObj,container){\n//     //解构\n//     const{type,props}=eleObj;\n//     //创建第一层的节点\n//     let ele=document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for(const prop in props){\n//       console.log(prop);\n//       // if(prop=='className'){\n//       //   ele.setAttribute('class',props[prop]);\n//       // }\n//       if(prop =='children'){\n//         if(typeof props.children==\"string\"){\n//           const txtNode = document.createTextNode(props.children);\n//           ele.appendChild(txtNode);\n//           break;\n//         }\n//         //将第一层节点对象的子元素添加进去\n//         props.children.forEach((child)=>{\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop]=props[prop];\n//       }\n//     }\n//     //将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n\n\n//环境搭建 创建一个项目 运行\n\n"],"sourceRoot":""}